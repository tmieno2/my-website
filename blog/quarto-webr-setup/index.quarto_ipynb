{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"A Minimal Introduction to Using External Datasets with `webr` in Quarto-generated Outputs\"\n",
        "description: \"This blog post provides a step-by-step guide on how to set up an R data package on R-universe to use external datasets for the `webr` sessions in documents created by Quarto.\"\n",
        "categories:\n",
        "  - R\n",
        "  - Quarto\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Motivation and Objectives\n",
        "\n",
        "The `webr` allows you to \n",
        "\n",
        "The goal of this blog post is to provide a step-by-step guide on how to set up R data packages on R-universe to use external datasets for the `webr` sessions in documents created by Quarto.\n",
        "\n",
        "Who should go through the hassle?\n",
        "\n",
        ":::{.callout-important title=\"Pre-requisites\"}\n",
        "In this blog post, I assume you are comfortable with version control with git and Github.\n",
        ":::\n",
        "\n",
        "# Steps\n",
        "\n",
        "Here are the major steps to take before you can use external datasets in `webr` sessions, with each of the steps consisting of smaller tasks.\n",
        "\n",
        "1. Create an R data package\n",
        "2. Host the package on R-universe\n",
        "3. Install the package on `webr` sessions inside a Quarto document\n",
        "\n",
        "## Prepare an R data package\n",
        "\n",
        "Here, we introduce a way to create an R dataset package (no functions, but just datasets like the `nycflights13` package). Please note that the goal here is not create a CRAN-approvable package, rather create a minimal viable package that is usable for `webr` sessions.\n",
        "\n",
        "First, clone [this repository](https://github.com/tmieno2/r-data-package-template) to your local computer. This repository is a modified version of the RStudio project when you initiate a new RStudio project for an R package by navigate through **New Project...** -> **New Directory** -> **R Package** on RStudio. Here are the modifications:\n",
        "\n",
        "+ **hello.R** in the **R** folder and **hello.Rd** in the **man** are removed\n",
        "+ *data.R* is added in the **R** folder\n",
        "+ **data-raw** folder is created, and then **gen_data.qmd** and **sample_data.csv** are created inside it\n",
        "+ **dev** folder is created, and then **dev.qmd** is created inside it\n",
        "+ `^data-raw$` and `^dev$` are added to **.Rbuildignore**\n",
        "\n",
        "Now, open **dev.qmd** and follow the instructions, which covers how to create datasets for the data package, create their descriptions, make documentations, and check if the datasets are accessible once the package is installed.\n",
        "\n",
        "Now, create a new repository on Github for this package and push the project folder to your Github account.\n",
        "\n",
        "## Set up R-universe\n",
        "\n",
        "I basically follow the instruction provided [here](https://docs.r-universe.dev/publish/set-up.html) to set up your own universe, but with some visual aids. \n",
        "\n",
        "1. Create a Github repository named `your-username.r-unievrse.dev`. For me this would be `tmieno2.r-unievrse.dev` as my Github account name is `tmieno2`. \n",
        "\n",
        "![](r-universe-dev){width=\"80%\" fig-align=\"center\"}\n",
        "\n",
        "2. Clone the repository and create a file called **packages.json**. Inside the file, you specify the name of the package and the url of the Github repository that hosts the package.\n",
        "\n",
        "```default\n",
        "[\n",
        "  {\n",
        "    \"package\": \"package name 1\",\n",
        "    \"url\": \"ulr of the Github repository 1\"\n",
        "  },\n",
        "  {\n",
        "    \"package\": \"package name 2\",\n",
        "    \"url\": \"ulr of the Github repository 2\"\n",
        "  },\n",
        "]\n",
        "```\n",
        "\n",
        "In my case, it looks like below:\n",
        "\n",
        "![](package-json){width=\"80%\" fig-align=\"center\"}\n",
        "\n",
        "I have only one package on R-universe called **r.spatial.workshop.datasets**, which is hosted at https://github.com/tmieno2/r.spatial.workshop.datasets.git.\n",
        "\n",
        "3. Install the r-universe app on your Github account by clicking on [here](https://github.com/apps/r-universe/installations/new). \n",
        "\n",
        "<span style = \"color: red;\"> Ask QQ for the pic </span>\n",
        "\n",
        "4. Wait until your package is built and hosted at your r-universe page **https://your-username.r-universe.dev** (e.g., https://tmieno2.r-universe.dev for me). \n",
        "\n",
        "## Install the package on `webr` sessions inside a Quarto document\n",
        "\n",
        "Now that the data package is on R-universe, you can easily use it in your `webr` sessions. Please note that, each time a document with `webr` session is opened, you need to install the package to use its datasets. This can be easily done by including a code like below in your qmd file.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "````{verbatim}\n",
        "```{webr-r}\n",
        "#| context: setup\n",
        "install.packages(\n",
        "  \"package name\", \n",
        "  repos = \"https://your-account-name.r-universe.dev\"\n",
        ")\n",
        "\n",
        "data(dataset-name)\n",
        "```\n",
        "````\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "For example, the following code will install the `r.spatial.workshop.datasets` package and load `NIR` dataset. `#| context: setup` is used her because users do not have to see the code. But, of course, you can show the codes as well if you wish.\n",
        "\n",
        "\n",
        "\n",
        "If you want to see this in action, you can visit [here]\n",
        "(https://github.com/tmieno2/R-as-GIS-workshop) and you can look at lines 84-96 of **L01_vector_basics.qmd**.\n"
      ],
      "id": "4ce035eb"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Library/Frameworks/Python.framework/Versions/3.10/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}